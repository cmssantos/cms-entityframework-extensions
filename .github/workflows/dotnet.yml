name: .NET CI/CD

on:
  push:
    branches: 
      - "main"
      - "develop"
    tags:
      - 'v*'
  pull_request:
    branches: 
      - "main"
      - "develop"
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: |
            6.0.x
            8.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: |
          dotnet test --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory TestResults \
            --logger trx \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat="cobertura;opencover" \
            /p:CoverletOutput="TestResults/"
        env:
          DOTNET_ROOT: /usr/share/dotnet

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults/**/* 
        if: always()

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            **/bin/Release/
            **/obj/Release/

  sonnarscan:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: TestResults

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarScanner
        run: dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner || (mkdir .\.sonar\scanner && dotnet tool install dotnet-sonarscanner --tool-path .\.sonar\scanner)

      - name: Run SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"cmssantos-entityframework-extensions" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.opencover.xml" \
            /d:sonar.cs.cobertura.reportsPaths="TestResults/coverage.cobertura.xml"
          dotnet build --no-incremental
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  pack:
    runs-on: ubuntu-latest
    needs: sonnarscan
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            8.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.1.11
        with:
          useConfigFile: true

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Pack
        run: |
          VERSION_SUFFIX=""
          if [[ ${{ github.ref }} == refs/heads/develop ]]; then
            VERSION_SUFFIX="-alpha.${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
          elif [[ ${{ github.ref }} == refs/heads/main ]]; then
            VERSION_SUFFIX="-beta.${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
          fi

          dotnet pack --configuration Release --output nupkgs \
            /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }}$VERSION_SUFFIX \
            /p:PackageVersion=${{ steps.gitversion.outputs.majorMinorPatch }}$VERSION_SUFFIX \
            /p:IncludeSymbols=true \
            /p:SymbolPackageFormat=snupkg

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: nupkgs

  publish:
    runs-on: ubuntu-latest
    needs: [build, pack]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/'))

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            8.0.x

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: nupkgs

      - name: Publish NuGet package
        run: |
          dotnet nuget push nupkgs/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate